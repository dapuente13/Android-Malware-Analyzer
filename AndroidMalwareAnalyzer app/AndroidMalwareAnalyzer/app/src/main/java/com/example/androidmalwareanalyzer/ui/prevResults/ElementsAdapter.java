package com.example.androidmalwareanalyzer.ui.prevResults;

import android.content.Context;
import android.graphics.drawable.Drawable;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;

import androidx.recyclerview.widget.RecyclerView;

import com.example.androidmalwareanalyzer.R;
import com.example.androidmalwareanalyzer.ui.appsInformation.PackageInfoStruct;

import java.util.List;

public class ElementsAdapter extends RecyclerView.Adapter<ElementsAdapter.ViewHolder> {

    private Context mContext;
    private List<PackageInfoStruct> list;

    public ElementsAdapter(Context context, List<PackageInfoStruct> resultsList) {
        mContext = context;
        list = resultsList;
    }

    public static class ViewHolder extends RecyclerView.ViewHolder {
        public ImageView mImageViewIcon;
        public TextView mTextViewName;
        public RelativeLayout mItem;

        public ViewHolder(View v) {
            super(v);
            // Get the widgets reference from custom layout
            mImageViewIcon = (ImageView) v.findViewById(R.id.package_icon);
            mTextViewName = (TextView) v.findViewById(R.id.app_name);
            mItem = (RelativeLayout) v.findViewById(R.id.item_layout);
        }

    }
    @Override
    public ElementsAdapter.ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
        View v = LayoutInflater.from(mContext).inflate(R.layout.list_elements, parent, false);
        ViewHolder vh = new ViewHolder(v);
        return vh;
    }

    @Override
    public void onBindViewHolder(ElementsAdapter.ViewHolder holder, final int position) {
        // Get the current app icon
        Drawable icon = list.get(position).getAppIcon();
        // Set the current app icon
        if (icon != null)
            holder.mImageViewIcon.setImageDrawable(icon);
        // Get the current app label
        String label = list.get(position).getAppName();
        // Set the current app label
        holder.mTextViewName.setText(label);
    }

    @Override
    public int getItemCount() {
        // Count the installed apps
        return list.size();
    }
}