package com.example.androidmalwareanalyzer.ui.logAnalyzer;

import android.graphics.drawable.Drawable;

import java.util.ArrayList;
import java.util.Collections;

public class LogResult {
    private ArrayList<LogInteractions> logs_result_list;

    public class LogInteractions implements Comparable<LogInteractions> {
        private String element = "";
        private String appname = "";
        private Drawable icon;
        private int total_interactions = 0;
        private ArrayList<SubElements> sub_elements;

        public LogInteractions() {
            sub_elements = new ArrayList<>();
        }

        private class SubElements {
            private String element = "";
            private String appname = "";
            private Drawable icon;
            private int interactions = 0;

            public SubElements (String element, int interactions) {
                this.setElement(element);
                this.setTotal_interactions(interactions);
            }

            public void setElement(String element) { this.element = element; }
            public String getElement() { return element; }
            public String getAppName() {
                return appname;
            }
            public void setAppName(String appName) { appname = appName; }
            public Drawable getAppIcon() {
                return icon;
            }
            public void setAppIcon(Drawable appIcon) {
                icon = appIcon;
            }
            public int getTotal_interactions() { return total_interactions; }
            public void setTotal_interactions(int total_interactions) { this.interactions = total_interactions; }
            public void addTotal_interactions(int total_interactions) { this.interactions += total_interactions; }
        }

        public void setElement(String element) { this.element = element; }
        public String getElement() { return element; }
        public String getAppName() {
            return appname;
        }
        public void setAppName(String appName) { appname = appName; }
        public Drawable getAppIcon() {
            return icon;
        }
        public void setAppIcon(Drawable appIcon) {
            icon = appIcon;
        }
        public int getTotal_interactions() { return total_interactions; }
        public void setTotal_interactions(int total_interactions) { this.total_interactions = total_interactions; }
        public void addTotal_interactions(int total_interactions) { this.total_interactions += total_interactions; }
        public int getSubElementsSize() { return this.sub_elements.size(); }
        public String getSubElement(int index) { return this.sub_elements.get(index).getElement(); }
        public int getSubElementInteractions(int index) { return this.sub_elements.get(index).getTotal_interactions(); }
        public void setSubElementInteractions(int index, int interactions) { this.sub_elements.get(index).addTotal_interactions(interactions); }
        public void addSubElement(String element, int interactions) {
            SubElements new_element = new SubElements(element, interactions);
            this.sub_elements.add(new_element);
        }

        @Override
        public int compareTo(LogInteractions o) {
            if (total_interactions == o.getTotal_interactions())
                return 0;
            else if (total_interactions > o.getTotal_interactions())
                return -1;
            else
                return 1;
        }
    }

    public LogResult(String msg) {
        logs_result_list = new ArrayList<LogInteractions>();
        parseResult(msg);
    }

    public void parseResult(String msg) {
        boolean found = false;
        //com.example.app camera 15
        String[] msg_lines = msg.split("\n");

        for (int i = 0; i < msg_lines.length; ++i) {
            String[] msg_values = msg_lines[i].split(" ");
            found = false;

            for (int j = 0; j < logs_result_list.size() && !found; ++j) {
                if (logs_result_list.get(j).getElement().equals(msg_values[0])) {
                    found = true;

                    if (msg_values[1].equals("-"))
                        logs_result_list.get(j).addTotal_interactions(Integer.parseInt(msg_values[2]));
                    else {
                        boolean sub_element_found = false;
                        for (int k = 0; k < logs_result_list.get(j).getSubElementsSize() && !sub_element_found; ++k) {
                            if (logs_result_list.get(j).getSubElement(k).equals(msg_values[1])) {
                                sub_element_found = true;
                                logs_result_list.get(j).setSubElementInteractions(k, Integer.parseInt(msg_values[2]));
                            }
                        }

                        if (!sub_element_found)
                            logs_result_list.get(j).addSubElement(msg_values[1], Integer.parseInt(msg_values[2]));
                    }
                }
            }

            if (!found) {
                LogInteractions new_element = new LogInteractions();
                new_element.setElement(msg_values[0]);
                new_element.setTotal_interactions(0);

                if (msg_values[1].equals("-"))
                    new_element.addTotal_interactions(Integer.parseInt(msg_values[2]));
                else {
                    new_element.addSubElement(msg_values[1], Integer.parseInt(msg_values[2]));
                }
                logs_result_list.add(new_element);
            }
        }

        Collections.sort(logs_result_list);
    }

    public String returnResult() {
        String msg = "";

        for (int i = 0; i < logs_result_list.size(); ++i) {
                msg += logs_result_list.get(i).getElement() + " - " + logs_result_list.get(i).getTotal_interactions() + "\n";

                for (int j = 0; j < logs_result_list.get(i).getSubElementsSize(); ++j)
                    msg += logs_result_list.get(i).getElement() + " " + logs_result_list.get(i).getSubElement(j) + " " + logs_result_list.get(i).getSubElementInteractions(j) + "\n";
        }

        return msg;
    }

    public ArrayList<LogInteractions> getList() { return logs_result_list; }
}
