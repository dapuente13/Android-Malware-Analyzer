package com.example.androidmalwareanalyzer.ui.permissionAnalyzer;

import java.util.HashMap;
import java.util.List;
import android.content.Context;
import android.graphics.Typeface;
import android.media.Image;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseExpandableListAdapter;
import android.widget.ImageView;
import android.widget.TextView;

import com.example.androidmalwareanalyzer.R;

public class CustomExpandableListAdapter extends BaseExpandableListAdapter {

    private Context context;
    private List<String> expandableListTitle;
    private HashMap<String, List<AppScore>> expandableListDetail;
    private int totalInstalledApps;
    private AppScore as;

    public CustomExpandableListAdapter(Context context, List<String> expandableListTitle,
                                       HashMap<String, List<AppScore>> expandableListDetail, int totalInstalledApps) {
        this.context = context;
        this.expandableListTitle = expandableListTitle;
        this.expandableListDetail = expandableListDetail;
        this.totalInstalledApps = totalInstalledApps;
    }

    @Override
    public Object getChild(int listPosition, int expandedListPosition) {
        return this.expandableListDetail.get(this.expandableListTitle.get(listPosition))
                .get(expandedListPosition);
    }

    @Override
    public long getChildId(int listPosition, int expandedListPosition) {
        return expandedListPosition;
    }

    @Override
    public View getChildView(int listPosition, final int expandedListPosition,
                             boolean isLastChild, View convertView, ViewGroup parent) {
        //final String expandedListText = (String) getChild(listPosition, expandedListPosition);

        as = (AppScore) getChild(listPosition, expandedListPosition);

        final String expandedListText = as.getPInfo().applicationInfo.loadLabel(context.getPackageManager())+"";

        if (convertView == null) {
            LayoutInflater layoutInflater = (LayoutInflater) this.context
                    .getSystemService(Context.LAYOUT_INFLATER_SERVICE);
            convertView = layoutInflater.inflate(R.layout.permissions_item, null);
        }

        ImageView icon = (ImageView) convertView.findViewById(R.id.app_icon);
        icon.setImageDrawable(as.getPInfo().applicationInfo.loadIcon(context.getPackageManager()));

        TextView expandedListTextView = (TextView) convertView.findViewById(R.id.list_app_name);
        expandedListTextView.setText(expandedListText);

        TextView app_package = (TextView) convertView.findViewById(R.id.list_app_package);
        app_package.setText("Version " + as.getPInfo().versionName);

        TextView perm = (TextView) convertView.findViewById(R.id.numberperm);
        switch (listPosition){
            case 0: perm.setText(as.getDeprec().size() + "/" + as.getPInfo().requestedPermissions.length);
                break;
            case 1: perm.setText(as.getProhib().size() + "/" + as.getPInfo().requestedPermissions.length);
                break;
            case 2: perm.setText(as.getDangerous().size() + "/" + as.getPInfo().requestedPermissions.length);

        }

        return convertView;
    }

    @Override
    public int getChildrenCount(int listPosition) {
        return this.expandableListDetail.get(this.expandableListTitle.get(listPosition))
                .size();
    }

    @Override
    public Object getGroup(int listPosition) {
        return this.expandableListTitle.get(listPosition);
    }

    @Override
    public int getGroupCount() {
        return this.expandableListTitle.size();
    }

    @Override
    public long getGroupId(int listPosition) {
        return listPosition;
    }

    @Override
    public View getGroupView(int listPosition, boolean isExpanded,
                             View convertView, ViewGroup parent) {
        String listTitle = (String) getGroup(listPosition);
        if (convertView == null) {
            LayoutInflater layoutInflater = (LayoutInflater) this.context.
                    getSystemService(Context.LAYOUT_INFLATER_SERVICE);
            convertView = layoutInflater.inflate(R.layout.permissions_group, null);
        }
        TextView listTitleTextView = (TextView) convertView
                .findViewById(R.id.listTitle);
        listTitleTextView.setTypeface(null, Typeface.BOLD);
        listTitleTextView.setText(listTitle);
        TextView numberapps = (TextView) convertView.findViewById(R.id.numberapps);
        numberapps.setText(getChildrenCount(listPosition)+ "/" + totalInstalledApps);
        return convertView;
    }

    @Override
    public boolean hasStableIds() {
        return false;
    }

    @Override
    public boolean isChildSelectable(int listPosition, int expandedListPosition) {
        return true;
    }
}