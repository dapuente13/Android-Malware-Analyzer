package com.example.androidmalwareanalyzer.ui;

import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;
import android.util.Log;
import android.widget.Toast;
import androidx.annotation.Nullable;

public class MalwareDB extends SQLiteOpenHelper {
    private Context context;
    private static final String DATABASE_NAME = "MalwareAnalyzer.db";
    private static final int DATABASE_VERSION = 1;

    private static final String TABLE_NAME_HASH = "Malware_list";
    private static final String COLUMN_ID = "id";
    private static final String COLUMN_HASH = "hash";

    private static final String TABLE_NAME_PERMITS = "Malware_permisses";
    private static final String COLUMN_ID_PERMIT = "_id";
    private static final String ID_PERMITS = "id_permit";
    private static final String COLUMN_DESCRIPTION_PERMITS = "description";

    public MalwareDB(@Nullable Context context) {
        super(context, DATABASE_NAME,null, DATABASE_VERSION);
        this.context = context;
    }

    @Override
    public void onCreate(SQLiteDatabase db) {
        String query1 = "CREATE TABLE " + TABLE_NAME_HASH +
                " (" + COLUMN_ID + " INTEGER PRIMARY KEY AUTOINCREMENT, " +
                COLUMN_HASH + " TEXT NOT NULL UNIQUE);";
        String query2 = "CREATE TABLE " + TABLE_NAME_PERMITS +
                " (" + COLUMN_ID_PERMIT + " INTEGER PRIMARY KEY AUTOINCREMENT, "
                + ID_PERMITS + " TEXT NOT NULL UNIQUE, " +
                COLUMN_DESCRIPTION_PERMITS + " TEXT);";

        db.execSQL(query1);
        db.execSQL(query2);
    }

    public void DeleteDB() {
        context.deleteDatabase(DATABASE_NAME);
    }

    @Override
    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
        db.execSQL("DROP TABLE IF EXISTS " + TABLE_NAME_HASH);
        db.execSQL("DROP TABLE IF EXISTS " + TABLE_NAME_PERMITS);
        onCreate(db);
    }

    public String getHash(String hashapp) {
        //hashapp = "6ffa35b0a2acd5565ade6d3e1af64a94";
        SQLiteDatabase db = this.getReadableDatabase();
        String query = "SELECT " + COLUMN_HASH +
                " FROM " + TABLE_NAME_HASH + " WHERE " +
                COLUMN_HASH + " = ?";
        String result = null;
        String[] selectionArgs = {hashapp};
        Cursor cursor = db.rawQuery(query, selectionArgs);
        if( cursor != null && cursor.moveToFirst() ) {
            result = cursor.getString(0);
            cursor.close();
        }
        db.close();
        return result;
    }

    public void getPermitDescription(String android_permission) {
        SQLiteDatabase db = this.getReadableDatabase();
        String query = "SELECT " + COLUMN_DESCRIPTION_PERMITS + " FROM " +
                TABLE_NAME_PERMITS + " WHERE " + ID_PERMITS +
                " = " + android_permission;
        Cursor cursor = db.rawQuery(query, null);
        //something
        cursor.close();
        db.close();
    }

    public void addNewHash(String hash){
        SQLiteDatabase db = this.getWritableDatabase();
        ContentValues cv = new ContentValues();

        cv.put(COLUMN_HASH, hash);
        long result = db.insert(TABLE_NAME_HASH,null, cv);
        if(result == -1)
            Toast.makeText(context, "Failed while adding a new hash!", Toast.LENGTH_SHORT).show();
        else
            Toast.makeText(context, "Added Successfully!", Toast.LENGTH_SHORT).show();
    }

    public void InitializeDBHashes(SQLiteDatabase db) {
        db.execSQL(String.format("INSERT INTO Malware_list (hash) VALUES ('6ffa35b0a2acd5565ade6d3e1af64a94')"));
        db.execSQL(String.format("INSERT INTO Malware_list (hash) VALUES ('12b5cc085c974ac955c37b1f84dda8ce')"));
        db.execSQL(String.format("INSERT INTO Malware_list (hash) VALUES ('e9b2d68cd1de41c6278776f2d1249676')"));
        db.execSQL(String.format("INSERT INTO Malware_list (hash) VALUES ('1c2a2d1853aafec963e5a62264f68134')"));
        db.execSQL(String.format("INSERT INTO Malware_list (hash) VALUES ('11b8e669e71e956c138324272200e099')"));
        db.execSQL(String.format("INSERT INTO Malware_list (hash) VALUES ('28ddb9b5b14fcca82c4b53af8ba0e03c')"));
        db.execSQL(String.format("INSERT INTO Malware_list (hash) VALUES ('89dfd0590058f9021aac24e69a3132fe')"));
        db.execSQL(String.format("INSERT INTO Malware_list (hash) VALUES ('5080cd5a0a56c99022a3fdfde6107f6b')"));
        db.execSQL(String.format("INSERT INTO Malware_list (hash) VALUES ('e55afb50e57b8354102e37485bef0532')"));
        db.execSQL(String.format("INSERT INTO Malware_list (hash) VALUES ('186b448e1ab099d6634c1c803b5d7286')"));
        db.execSQL(String.format("INSERT INTO Malware_list (hash) VALUES ('e9870a5923a6465f1de82913057d067d')"));
        db.execSQL(String.format("INSERT INTO Malware_list (hash) VALUES ('f60b8dd2d224bb692c14d0d8fcf933c4')"));
        db.execSQL(String.format("INSERT INTO Malware_list (hash) VALUES ('a9fbfc4f3e537829bcb96289ab61273d')"));
        db.execSQL(String.format("INSERT INTO Malware_list (hash) VALUES ('cab323903d20e7b9d6cd2142c7baf595')"));
        db.execSQL(String.format("INSERT INTO Malware_list (hash) VALUES ('5d2296744d39432ccac99d9f3316c425')"));
        db.execSQL(String.format("INSERT INTO Malware_list (hash) VALUES ('82cc3f74ed4594c393a3c882f6c31a64')"));
        db.execSQL(String.format("INSERT INTO Malware_list (hash) VALUES ('33218d2de728bd921850b0bcf7056e1e')"));
        db.execSQL(String.format("INSERT INTO Malware_list (hash) VALUES ('79334478d4b5bc02055fda4dd73103b4')"));
        db.execSQL(String.format("INSERT INTO Malware_list (hash) VALUES ('5e6d8388380328018701d06e291bb87a')"));
        db.execSQL(String.format("INSERT INTO Malware_list (hash) VALUES ('a91a8a79a2d27d5721c270f558845745')"));
        db.execSQL(String.format("INSERT INTO Malware_list (hash) VALUES ('9ed860447ffe38b209f8d6d9f1285074')"));
        db.execSQL(String.format("INSERT INTO Malware_list (hash) VALUES ('86167601bdaaa491d3234889ad7cdf50')"));
        db.execSQL(String.format("INSERT INTO Malware_list (hash) VALUES ('f6a5305817221c662a7ec6ade077bd6e')"));
        db.execSQL(String.format("INSERT INTO Malware_list (hash) VALUES ('1de8178ca6cad5ad4f61f80cfc53cb76')"));
        db.execSQL(String.format("INSERT INTO Malware_list (hash) VALUES ('8a5752aa5c7399d3d2fff76d892ab160')"));
        db.execSQL(String.format("INSERT INTO Malware_list (hash) VALUES ('d8dfb1e86df4f17f4bf88cb0fecb4dbe')"));
        db.execSQL(String.format("INSERT INTO Malware_list (hash) VALUES ('2ce7bd76dfe2e81d612990833f44ffd2')"));
        db.execSQL(String.format("INSERT INTO Malware_list (hash) VALUES ('9203dbf17b4db01cfa314e0699d4a3cf')"));
        db.execSQL(String.format("INSERT INTO Malware_list (hash) VALUES ('01c092ad12f442794e98fb41c05ef0fc')"));
        db.execSQL(String.format("INSERT INTO Malware_list (hash) VALUES ('d7bedbe0971547f5ee242fb51f56c4fb')"));
        db.execSQL(String.format("INSERT INTO Malware_list (hash) VALUES ('fdf6ea8b4a7e9904ec23bed66d6fde8d')"));
        db.execSQL(String.format("INSERT INTO Malware_list (hash) VALUES ('34986c0c444c6f8275084c628791a9f3')"));
        db.execSQL(String.format("INSERT INTO Malware_list (hash) VALUES ('bd92330c005fb5a03210947888131cdb')"));
        db.execSQL(String.format("INSERT INTO Malware_list (hash) VALUES ('7c710b7b2c15a291138d4c1bc23e3414')"));
    }

    public void InitializeDBPermisses(SQLiteDatabase db) {
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.ACCESS_ALL_EXTERNAL_STORAGE','Allows the app to access external storage for all users.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.SIGNAL_PERSISTENT_PROCESSES','Allows the app to request that the supplied signal be sent to all persistent processes.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.READ_LOGS','Allows the app to read from the system´s various log files. This allows it to discover general information about what you are doing with the phone, potentially including personal or private information.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.WRITE_SECURE_SETTINGS','Allows the app to modify the system´s secure settings data. Not for use by normal apps.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.CHANGE_CONFIGURATION','Allows the app to change the current configuration, such as the locale or overall font size.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.CHANGE_WIFI_MULTICAST_STATE','Allows the app to receive packets sent to all devices on a Wi-Fi network using multicast addresses, not just your phone. It uses more power than the non-multicast mode.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.SET_ALWAYS_FINISH','Allows the app to control whether activities are always finished as soon as they go to the background. Never needed for normal apps.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.SET_PROCESS_LIMIT','Allows the app to control the maximum number of processes that will run. Never needed for normal apps.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.DUMP','Allows the app to retrieve internal state of the system. Malicious apps may retrieve a wide variety of private and secure information that they should never normally need.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.SET_DEBUG_APP','Allows the app to turn on debugging for another app. Malicious apps may use this to kill other apps.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.WAKE_LOCK','Allows the app to prevent the phone from going to sleep.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.FLASHLIGHT','Allows the app to control the flashlight.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.TRANSMIT_IR','Allows the app to use the phone´s infrared transmitter.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.VIBRATE','Allows the app to control the vibrator.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.EXPAND_STATUS_BAR','Allows the app to expand or collapse the status bar.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.SYSTEM_ALERT_WINDOW','Allows the app to draw on top of other applications or parts of the user interface. They may interfere with your use of the interface in any application, or change what you think you are seeing in other applications.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.CAMERA_DISABLE_TRANSMIT_LED','Allows a pre-installed system application to disable the camera use indicator LED.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.CAMERA','Allows the app to take pictures and videos with the camera. This permission allows the app to use the camera at any time without your confirmation.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.ACCESS_WIMAX_STATE','Allows the app to determine whether WiMAX is enabled and information about any WiMAX networks that are connected.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.ACCESS_NETWORK_STATE','Allows the app to view information about network connections such as which networks exist and are connected.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.CHANGE_NETWORK_STATE','Allows the app to change the state of network connectivity.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.NFC','Allows the app to communicate with Near Field Communication (NFC) tags, cards, and readers.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.CHANGE_WIFI_STATE','Allows the app to connect to and disconnect from Wi-Fi access points and to make changes to device configuration for Wi-Fi networks.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.ACCESS_WIFI_STATE','Allows the app to view information about Wi-Fi networking, such as whether Wi-Fi is enabled and name of connected Wi-Fi devices.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.CHANGE_WIMAX_STATE','Allows the app to connect the phone to and disconnect the phone from WiMAX networks.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.INTERNET','Allows the app to create network sockets and use custom network protocols. The browser and other applications provide means to send data to the internet, so this permission is not required to send data to the internet.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.DOWNLOAD_WITHOUT_NOTIFICATION','Allows the app to download files through the download manager without any notification being shown to the user.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.RECORD_AUDIO','Allows the app to record audio with the microphone. This permission allows the app to record audio at any time without your confirmation.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.DISABLE_KEYGUARD','Allows the app to disable the keylock and any associated password security. For example, the phone disables the keylock when receiving an incoming phone call, then re-enables the keylock when the call is finished.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.MODIFY_AUDIO_SETTINGS','Allows the app to modify global audio settings such as volume and which speaker is used for output.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('com.android.voicemail.permission.ADD_VOICEMAIL','Allows the app to add messages to your voicemail inbox.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.READ_SYNC_STATS','Allows an app to read the sync stats for an account, including the history of sync events and how much data is synced.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.WRITE_SYNC_SETTINGS','Allows an app to modify the sync settings for an account. For example, this can be used to enable sync of the People app with an account.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.MANAGE_ACTIVITY_STACKS','Allows the app to add, remove, and modify the activity stacks in which other apps run. Malicious apps may disrupt the behavior of other apps.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.RESTART_PACKAGES','Allows the app to end background processes of other apps. This may cause other apps to stop running.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.GET_TASKS','Allows the app to retrieve information about currently and recently running tasks. This may allow the app to discover information about which applications are used on the device.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.REORDER_TASKS','Allows the app to move tasks to the foreground and background. The app may do this without your input.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.PERSISTENT_ACTIVITY','Allows the app to make parts of itself persistent in memory. This can limit memory available to other apps slowing down the phone.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.KILL_BACKGROUND_PROCESSES','Allows the app to end background processes of other apps. This may cause other apps to stop running.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.RECEIVE_BOOT_COMPLETED','Allows the app to have itself started as soon as the system has finished booting. This can make it take longer to start the phone and allow the app to slow down the overall phone by always running.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.REMOVE_TASKS','Allows the app to remove tasks and kill their apps. Malicious apps may disrupt the behavior of other apps.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.WRITE_CALL_LOG','Allows the app to modify your phone´s call log, including data about incoming and outgoing calls. Malicious apps may use this to erase or modify your call log.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.READ_CONTACTS','Allows the app to read data about your contacts stored on your phone, including the frequency with which you´ve called, emailed, or communicated in other ways with specific individuals. This permission allows apps to save your contact data, and malicious apps may share contact data without your knowledge.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.READ_CALL_LOG','Allows the app to read your phone´s call log, including data about incoming and outgoing calls. This permission allows apps to save your call log data, and malicious apps may share call log data without your knowledge.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.READ_SOCIAL_STREAM','Allows the app to access and sync social updates from you and your friends. Be careful when sharing information -- this allows the app to read communications between you and your friends on social networks, regardless of confidentiality. Note: this permission may not be enforced on all social networks.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.WRITE_CONTACTS','Allows the app to modify the data about your contacts stored on your phone, including the frequency with which you´ve called, emailed, or communicated in other ways with specific contacts. This permission allows apps to delete contact data.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.WRITE_SOCIAL_STREAM','Allows the app to display social updates from your friends. Be careful when sharing information -- this allows the app to produce messages that may appear to come from a friend. Note: this permission may not be enforced on all social networks.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.ACCESS_COARSE_LOCATION','Allows the app to get your approximate location. This location is derived by location services using network location sources such as cell towers and Wi-Fi. These location services must be turned on and available to your device for the app to use them. Apps may use this to determine approximately where you are.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.ACCESS_FINE_LOCATION','Allows the app to get your precise location using the Global Positioning System (GPS) or network location sources such as cell towers and Wi-Fi. These location services must be turned on and available to your device for the app to use them. Apps may use this to determine where you are, and may consume additional battery power.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('com.android.alarm.permission.SET_ALARM','Allows the app to set an alarm in an installed alarm clock app. Some alarm clock apps may not implement this feature.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.BIND_CALL_SERVICE','Allows the app to control when and how the user sees the in-call screen.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.MODIFY_PHONE_STATE','Allows the app to control the phone features of the device. An app with this permission can switch networks, turn the phone radio on and off and the like without ever notifying you.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.PROCESS_OUTGOING_CALLS','Allows the app to process outgoing calls and change the number to be dialed. This permission allows the app to monitor, redirect, or prevent outgoing calls.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.READ_PHONE_STATE','Allows the app to access the phone features of the device. This permission allows the app to determine the phone number and device IDs, whether a call is active, and the remote number connected by a call.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.CALL_PHONE','Allows the app to call phone numbers without your intervention. This may result in unexpected charges or calls. Note that this doesn´t allow the app to call emergency numbers. Malicious apps may cost you money by making calls without your confirmation.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.USE_SIP','Allows the app to use the SIP service to make/receive Internet calls.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.CLEAR_APP_CACHE','Allows the app to free phone storage by deleting files in the cache directories of other applications. This may cause other applications to start up more slowly as they need to re-retrieve their data.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.ASEC_ACCESS','Allows the app to get information on internal storage.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.ACCESS_MOCK_LOCATION','Create mock location sources for testing or install a new location provider. This allows the app to override the location and/or status returned by other location sources such as GPS or location providers.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.CHANGE_BACKGROUND_DATA_SETTING','Allows the app to change the background data usage setting.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.GET_DETAILED_TASKS','Allows the app to retrieve detailed information about currently and recently running tasks. Malicious apps may discover private information about other apps.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.FORCE_STOP_PACKAGES','Allows the app to forcibly stop other apps.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('com.android.launcher.permission.UNINSTALL_SHORTCUT','Allows the application to remove Homescreen shortcuts without user intervention.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.DIAGNOSTIC','Allows the app to read and write to any resource owned by the diag group; for example, files in /dev. This could potentially affect system stability and security. This should be ONLY be used for hardware-specific diagnostics by the manufacturer or operator.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.START_ANY_ACTIVITY','Allows the app to start any activity, regardless of permission protection or exported state.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.MOUNT_UNMOUNT_FILESYSTEMS','Allows the app to mount and unmount filesystems for removable storage.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.ASEC_CREATE','Allows the app to create internal storage.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.BATTERY_STATS','Allows an application to read the current low-level battery use data. May allow the application to find out detailed information about which apps you use.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.ASEC_RENAME','Allows the app to rename internal storage.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.MOUNT_FORMAT_FILESYSTEMS','Allows the app to format removable storage.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.MANAGE_USERS','Allows apps to manage users on the device, including query, creation and deletion.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.SUBSCRIBED_FEEDS_READ','Allows the app to get details about the currently synced feeds.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('com.android.launcher.permission.READ_SETTINGS','Allows the app to read the settings and shortcuts in Home.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.BROADCAST_STICKY','Allows the app to send sticky broadcasts, which remain after the broadcast ends. Excessive use may make the phone slow or unstable by causing it to use too much memory.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.GET_PACKAGE_SIZE','Allows the app to retrieve its code, data, and cache sizes.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.WRITE_APN_SETTINGS','Allows the app to change network settings and to intercept and inspect all network traffic, for example to change the proxy and port of any APN. Malicious apps may monitor, redirect, or modify network packets without your knowledge.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.SET_ANIMATION_SCALE','Allows the app to change the global animation speed (faster or slower animations) at any time.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.GET_APP_OPS_STATS','Allows the app to retrieve collected application operation statistics. Not for use by normal apps.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.ASEC_MOUNT_UNMOUNT','Allows the app to mount/unmount internal storage.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.SUBSCRIBED_FEEDS_WRITE','Allows the app to modify your currently synced feeds. Malicious apps may change your synced feeds.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.SET_PREFERRED_APPLICATIONS','Allows the app to modify your preferred apps. Malicious apps may silently change the apps that are run, spoofing your existing apps to collect private data from you.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.SET_SCREEN_COMPATIBILITY','Allows the app to control the screen compatibility mode of other applications. Malicious applications may break the behavior of other applications.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.ACCESS_LOCATION_EXTRA_COMMANDS','Allows the app to access extra location provider commands. This may allow the app to to interfere with the operation of the GPS or other location sources.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.ASEC_DESTROY','Allows the app to destroy internal storage.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.INTERACT_ACROSS_USERS','Allows the app to perform actions across different users on the device. Malicious apps may use this to violate the protection between users.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('com.android.launcher.permission.INSTALL_SHORTCUT','Allows an application to add Homescreen shortcuts without user intervention.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.INTERACT_ACROSS_USERS_FULL','Allows all possible interactions across users.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.WRITE_SETTINGS','Allows the app to modify the system´s settings data. Malicious apps may corrupt your system´s configuration.\n')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('com.android.launcher.permission.WRITE_SETTINGS','Allows the app to change the settings and shortcuts in Home.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.BROADCAST_PACKAGE_REMOVED','Allows the app to broadcast a notification that an app package has been removed. Malicious apps may use this to kill any other running app.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.READ_USER_DICTIONARY','Allows the app to read all words, names and phrases that the user may have stored in the user dictionary.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.BLUETOOTH_ADMIN','Allows the app to configure the local Bluetooth phone, and to discover and pair with remote devices.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.BLUETOOTH_PRIVILEGED','Allows the app to pair with remote devices without user interaction.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.BLUETOOTH','Allows the app to view the configuration of the Bluetooth on the phone, and to make and accept connections with paired devices.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.SET_TIME_ZONE','Allows the app to change the phone´s time zone.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('com.google.android.gtalkservice.permission.GTALK_SERVICE','Used for server cloud to device messages and for sync notifications. Google Talk uses this service to exchange messages and to synchronize presence status. Malicious apps could use this service to transmit excess data.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.BROADCAST_WAP_PUSH','Allows the app to broadcast a notification that a WAP PUSH message has been received. Malicious apps may use this to forge MMS message receipt or to silently replace the content of any webpage with malicious variants.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.WRITE_SMS','Allows the app to write to SMS messages stored on your phone or SIM card. Malicious apps may delete your messages.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.RECEIVE_EMERGENCY_BROADCAST','Allows the app to receive and process emergency broadcast messages. This permission is only available to system apps.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.SEND_RESPOND_VIA_MESSAGE','Allows the app to send requests to other messaging apps to handle respond-via-message events for incoming calls.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('com.google.android.providers.talk.permission.READ_ONLY','Allows apps to read data from the Google Talk content provider.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.RECEIVE_WAP_PUSH','Allows the app to receive and process WAP messages. This permission includes the ability to monitor or delete messages sent to you without showing them to you.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('com.google.android.providers.talk.permission.WRITE_ONLY','Allows apps to write data to the Google Talk content provider.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.SEND_SMS','Allows the app to send SMS messages. This may result in unexpected charges. Malicious apps may cost you money by sending messages without your confirmation.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.BROADCAST_SMS','Allows the app to broadcast a notification that an SMS message has been received. Malicious apps may use this to forge incoming SMS messages.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.READ_SMS','Allows the app to read SMS messages stored on your phone or SIM card. This allows the app to read all SMS messages, regardless of content or confidentiality.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('com.android.email.permission.READ_ATTACHMENT','Allows the app to read your email attachments.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.RECEIVE_SMS','Allows the app to receive and process SMS messages. This means the app could monitor or delete messages sent to your device without showing them to you.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.READ_CELL_BROADCASTS','Allows the app to read cell broadcast messages received by your device. Cell broadcast alerts are delivered in some locations to warn you of emergency situations. Malicious apps may interfere with the performance or operation of your device when an emergency cell broadcast is received.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.RECEIVE_MMS','Allows the app to receive and process MMS messages. This means the app could monitor or delete messages sent to your device without showing them to you.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.WRITE_MEDIA_STORAGE','Allows the app to modify the contents of the internal media storage.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.READ_EXTERNAL_STORAGE','Allows the app to read the contents of your SD card.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.MANAGE_DOCUMENTS','Allows the app to manage document storage.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.WRITE_EXTERNAL_STORAGE','Allows the app to write to the SD card.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.WRITE_USER_DICTIONARY','Allows the app to write new words into the user dictionary.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.READ_PROFILE','Allows the app to read personal profile information stored on your device, such as your name and contact information. This means the app can identify you and may send your profile information to others.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.WRITE_CALENDAR','Allows the app to add, remove, change events that you can modify on your phone, including those of friends or co-workers. This may allow the app to send messages that appear to come from calendar owners, or modify events without the owner´s knowledge.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.BIND_APPWIDGET','Allows the app to tell the system which widgets can be used by which app. An app with this permission can give access to personal data to other apps. Not for use by normal apps.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.RETRIEVE_WINDOW_CONTENT','Allows the app to retrieve the content of the active window. Malicious apps may retrieve the entire window content and examine all its text except passwords.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.READ_CALENDAR','Allows the app to read all calendar events stored on your phone, including those of friends or co-workers. This may allow the app to share or save your calendar data, regardless of confidentiality or sensitivity.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('com.google.android.gms.permission.ACTIVITY_RECOGNITION','Allows an app to receive periodic updates of your activity level from Google, for example, if you are walking, driving, cycling, or stationary.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('com.android.voicemail.permission.READ_WRITE_ALL_VOICEMAIL','Allows the app to store and retrieve all voicemails that this device can access.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.WRITE_PROFILE','Allows the app to change or add to personal profile information stored on your device, such as your name and contact information. This means the app can identify you and may send your profile information to others.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.SET_WALLPAPER_HINTS','Allows the app to set the system wallpaper size hints.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.SET_WALLPAPER','Allows the app to set the system wallpaper.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('com.android.browser.permission.WRITE_HISTORY_BOOKMARKS','Allows the app to modify the Browser´s history or bookmarks stored on your phone. This may allow the app to erase or modify Browser data. Note: this permission may note be enforced by third-party browsers or other applications with web browsing capabilities.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('com.android.browser.permission.READ_HISTORY_BOOKMARKS','Allows the app to read the history of all URLs that the Browser has visited, and all of the Browser´s bookmarks. Note: this permission may not be enforced by third-party browsers or other applications with web browsing capabilities.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('com.google.android.googleapps.permission.GOOGLE_AUTH.android','Allows apps to sign in to Android services using the account(s) stored on this Android device.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('com.google.android.googleapps.permission.GOOGLE_AUTH.orkut','Allows apps to sign in to Orkut using the account(s) stored on this Android device.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.AUTHENTICATE_ACCOUNTS','Allows the app to use the account authenticator capabilities of the AccountManager, including creating accounts and getting and setting their passwords.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('com.google.android.googleapps.permission.GOOGLE_AUTH.ah','Allows apps to sign in to Google App Engine using the account(s) stored on this Android device.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('com.google.android.googleapps.permission.GOOGLE_AUTH.doraemon','Allows applications to sign in to the Google Catalogs service using the account(s) stored on this phone.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('com.google.android.googleapps.permission.GOOGLE_AUTH.lh2','Allows apps to sign in to Picasa Web Albums using the account(s) stored on this Android device.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('com.google.android.googleapps.permission.GOOGLE_AUTH','Allows apps to see the usernames (email addresses) of the Google account(s) you have configured.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('com.google.android.googleapps.permission.GOOGLE_AUTH.wise','Allows apps to sign in to Google Spreadsheets using the account(s) stored on this Android device.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('com.google.android.googleapps.permission.GOOGLE_AUTH.speechpersonalization','Allows apps to sign in to the Personalized Speech Recognition service using the account(s) stored on this Android device.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('com.google.android.googleapps.permission.GOOGLE_AUTH.notebook','Allows apps to sign in to Google Notebook using the account(s) stored on this Android device.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('com.google.android.googleapps.permission.GOOGLE_AUTH.sierra','Allows apps to sign in to Google Checkout (and potentially make purchases) using the account(s) stored on this Android device.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('com.google.android.googleapps.permission.GOOGLE_AUTH.groups2','Allows apps to sign in to Google Groups using the account(s) stored on this Android device.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('com.google.android.googleapps.permission.GOOGLE_AUTH.goanna_mobile','Allows applications to sign in to the Google Tasks service using the account(s) stored on this phone.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.GET_ACCOUNTS','Allows the app to get the list of accounts known by the phone. This may include any accounts created by applications you have installed.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.ACCOUNT_MANAGER','Allows the app to make calls to AccountAuthenticators.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('com.google.android.googleapps.permission.GOOGLE_AUTH.knol','Allows apps to sign in to Knol using the account(s) stored on this Android device.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('com.google.android.googleapps.permission.GOOGLE_AUTH.blogger','Allows apps to sign in to Blogger using the account(s) stored on this Android device.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('com.google.android.googleapps.permission.GOOGLE_AUTH.sierraqa','Allows apps to sign in to Google Checkout QA using the account(s) stored on this Android device.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('com.google.android.googleapps.permission.GOOGLE_AUTH.speech','Allows apps to sign in to Google Voice Search using the account(s) stored on this Android device.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('com.google.android.googleapps.permission.GOOGLE_AUTH.health','Allows apps to sign in to Google Health using the account(s) stored on this Android device.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('com.google.android.googleapps.permission.GOOGLE_AUTH.sierrasandbox','Allows apps to sign in to Google Checkout Sandbox using the account(s) stored on this Android device.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('com.google.android.googleapps.permission.GOOGLE_AUTH.writely','Allows apps to sign in to Google Docs using the account(s) stored on this Android device.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('com.google.android.googleapps.permission.GOOGLE_AUTH.print','Allows apps to sign in to Google Book Search using the account(s) stored on this Android device.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('com.google.android.googleapps.permission.GOOGLE_AUTH.news','Allows apps to sign in to Google News using the account(s) stored on this Android device.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('com.google.android.googleapps.permission.GOOGLE_AUTH.androidsecure','Allows apps to sign in to Android services using the account(s) stored on this Android device.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('com.google.android.googleapps.permission.GOOGLE_AUTH.ig','Allows apps to sign in to iGoogle using the account(s) stored on this Android device.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('com.google.android.googleapps.permission.GOOGLE_AUTH.talk','Allows apps to sign in to Google Talk using the account(s) stored on this Android device.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('com.google.android.googleapps.permission.GOOGLE_AUTH.youtube','Allows apps to sign in to YouTube using the account(s) stored on this Android device.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.MANAGE_ACCOUNTS','Allows the app to perform operations like adding and removing accounts, and deleting their password.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('com.google.android.googleapps.permission.GOOGLE_AUTH.jotspot','Allows apps to sign in to JotSpot using the account(s) stored on this Android device.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('com.google.android.googleapps.permission.GOOGLE_AUTH.dodgeball','Allows apps to sign in to Dodgeball using the account(s) stored on this Android device.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('com.google.android.providers.gsf.permission.READ_GSERVICES','Allows this app to read Google service configuration data.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('com.google.android.googleapps.permission.GOOGLE_AUTH.OTHER_SERVICES','Allows apps to sign in to unspecified Google services using the account(s) stored on this Android device.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('com.google.android.googleapps.permission.GOOGLE_AUTH.reader','Allows applications to sign in to the Google Reader service using the account(s) stored on this phone.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('com.google.android.googleapps.permission.GOOGLE_AUTH.geowiki','Allows applications to sign in to the Google Map maker service using the account(s) stored on this phone.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('com.google.android.googleapps.permission.GOOGLE_AUTH.grandcentral','Allows apps to sign in to Google Voice using the account(s) stored on this Android device.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('com.google.android.googleapps.permission.GOOGLE_AUTH.adwords','Allows apps to sign in to Google AdWords using the account(s) stored on this Android device.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('com.google.android.googleapps.permission.GOOGLE_AUTH.YouTubeUser','Allows apps to see the YouTube username(s) associated with the Google account(s) stored on this Android device.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('com.google.android.googleapps.permission.GOOGLE_AUTH.mail','Allows apps to sign in to Google mail services using the account(s) stored on this Android device.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.USE_CREDENTIALS','Allows the app to request authentication tokens.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('com.google.android.googleapps.permission.GOOGLE_AUTH.adsense','Allows apps to sign in to Google AdSense using the account(s) stored on this Android device.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('com.google.android.googleapps.permission.GOOGLE_AUTH.sitemaps','Allows apps to sign in to Google Webmaster Tools using the account(s) stored on this Android device.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('com.google.android.googleapps.permission.GOOGLE_AUTH.local','Allows apps to sign in to Google Maps using the account(s) stored on this Android device.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('com.google.android.googleapps.permission.GOOGLE_AUTH.ALL_SERVICES','Allows apps to sign in to ALL Google services using the account(s) stored on this Android device.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('com.google.android.googleapps.permission.GOOGLE_AUTH.cp','Allows apps to access the contacts and profile information of account(s) stored on this Android device.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('com.google.android.googleapps.permission.GOOGLE_AUTH.wifi','Allows apps to sign in to Google Wi-Fi using the account(s) stored on this Android device.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('com.google.android.googleapps.permission.GOOGLE_AUTH.cl','Allows apps to sign in to Google Calendar using the account(s) stored on this Android device.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('com.google.android.googleapps.permission.GOOGLE_AUTH.mobile','Allows apps to sign in to Google mobile apps using the account(s) stored on this Android device.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('com.google.android.googleapps.permission.GOOGLE_AUTH.gbase','Allows apps to sign in to Google Base using the account(s) stored on this Android device.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('com.google.android.googleapps.permission.GOOGLE_AUTH.panoramio','Allows applications to sign in to the Panoramio service using the account(s) stored on this phone.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('com.google.android.googleapps.permission.GOOGLE_AUTH.finance','Allows apps to sign in to Google Finance using the account(s) stored on this Android device.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.HARDWARE_TEST','Allows the app to control various peripherals for the purpose of hardware testing.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.MANAGE_USB','Allows the app to manage preferences and permissions for USB devices.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('android.permission.ACCESS_MTP','Allows access to the kernel MTP driver to implement the MTP USB protocol.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('com.google.android.xmpp.permission.USE_XMPP_ENDPOINT','Allows Google apps to send and receive XMPP messages to and from Google servers.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('com.google.android.permission.BROADCAST_DATA_MESSAGE','Can broadcast data messages received from the Internet to apps registered to listen for them.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('com.google.android.gtalkservice.permission.SEND_HEARTBEAT','Can send a heartbeat packet to the Google Talk server to ensure the health of the connection.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('com.google.android.c2dm.permission.SEND','Can broadcast data messages received from the Internet to apps registered to listen for them.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('com.google.android.xmpp.permission.XMPP_ENDPOINT_BROADCAST','Can broadcast XMPP messages received from the Google servers to apps.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('com.google.android.xmpp.permission.SEND_RECEIVE','Allows Google apps to send and receive XMPP messages to and from Google servers.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('com.google.android.xmpp.permission.BROADCAST','Can broadcast XMPP messages received from the Google servers to apps registered to listen for them.')"));
        db.execSQL(String.format("INSERT INTO Malware_permisses (id_permit, description) VALUES ('com.google.android.c2dm.permission.RECEIVE','Allows apps to accept cloud to device messages sent by the app´s service. Using this service will incur data usage. Malicious apps could cause excess data usage.')"));
    }
}

