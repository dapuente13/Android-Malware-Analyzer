package com.example.androidmalwareanalyzer.ui.serverSettings;

import android.app.AlertDialog;
import android.content.DialogInterface;
import android.os.Bundle;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.EditText;
import android.widget.ListView;
import android.widget.TextView;

import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.fragment.app.Fragment;
import androidx.lifecycle.Observer;
import androidx.lifecycle.ViewModelProvider;

import com.example.androidmalwareanalyzer.MainActivity;
import com.example.androidmalwareanalyzer.R;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.google.android.material.snackbar.Snackbar;

public class ServerSettingsFragment extends Fragment {

    private ServerSettingsViewModel serverSettingsViewModel;

    public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        serverSettingsViewModel = new ViewModelProvider(this).get(ServerSettingsViewModel.class);
        View root = inflater.inflate(R.layout.fragment_server_settings, container, false);
        final TextView textView = root.findViewById(R.id.text_server_settings);
        serverSettingsViewModel.getText().observe(getViewLifecycleOwner(), new Observer<String>() {
            @Override
            public void onChanged(@Nullable String s) {
                textView.setText(s);
            }
        });

        serverSettingsViewModel.addConnection("127.0.0.1:8080");
        serverSettingsViewModel.addConnection("129.101.0.5:8080");
        serverSettingsViewModel.addConnection("127.0.0.1:4444");
        serverSettingsViewModel.addConnection("1.23.11.0:1234");


        ListView simpleList = (ListView) root.findViewById(R.id.list);
        ArrayAdapter<String> arrayAdapter =
                new ArrayAdapter<String>(getActivity(), R.layout.list_text_element, R.id.textElementView, serverSettingsViewModel.getConnectionsList());
        simpleList.setAdapter(arrayAdapter);

        simpleList.setOnItemClickListener(new AdapterView.OnItemClickListener() {
            @Override
            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
                serverSettingsViewModel.setSelectedConnection(position);
            }
        });

        FloatingActionButton addFab = root.findViewById(R.id.fabAdd);
        addFab.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                final EditText taskEditText = new EditText(view.getContext());
                AlertDialog dialog = new AlertDialog.Builder(view.getContext())
                        .setTitle("Add a new connection")
                        .setMessage("It must follow this format: 127.0.0.1:8888")
                        .setView(taskEditText)
                        .setPositiveButton("Add", new DialogInterface.OnClickListener() {
                            @Override
                            public void onClick(DialogInterface dialog, int which) {
                                String newConnection = String.valueOf(taskEditText.getText());
                                serverSettingsViewModel.addConnection(newConnection);
                                arrayAdapter.notifyDataSetChanged();

                                Snackbar.make(view, "Connection added: [" + newConnection + "]", Snackbar.LENGTH_LONG)
                                        .setAction("Action", null).show();
                            }
                        })
                        .setNegativeButton("Cancel", null)
                        .create();
                dialog.show();
            }
        });

        FloatingActionButton delFab = root.findViewById(R.id.fabDel);
        delFab.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                if(serverSettingsViewModel.isSelected()) {
                    Snackbar.make(view, "Connection deleted: [" + serverSettingsViewModel.getSelectedConnection() + "]", Snackbar.LENGTH_LONG)
                            .setAction("Action", null).show();

                    serverSettingsViewModel.deleteSelectedConnection();
                    arrayAdapter.notifyDataSetChanged();
                }
                else {
                    Snackbar.make(view, "Select the connection to be deleted", Snackbar.LENGTH_LONG)
                            .setAction("Action", null).show();
                }
            }
        });

        return root;
    }
}