package com.example.androidmalwareantivirus;

import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;
import android.widget.Toast;
import androidx.annotation.Nullable;

public class MalwareDB extends SQLiteOpenHelper {
    private Context context;
    private static final String DATABASE_NAME = "MalwareAnalyzer.db";
    private static final int DATABASE_VERSION = 1;

    private static final String TABLE_NAME_HASH = "Malware_list";
    private static final String COLUMN_ID = "id";
    private static final String COLUMN_HASH = "hash";

    private static final String TABLE_NAME_PERMITS = "Malware_permisses";
    private static final String COLUMN_ID_PERMIT = "_id";
    private static final String ID_PERMITS = "id_permit";
    private static final String COLUMN_DESCRIPTION_PERMITS = "description";

    public MalwareDB(@Nullable Context context) {
        super(context, DATABASE_NAME,null, DATABASE_VERSION);
        this.context = context;
    }

    @Override
    public void onCreate(SQLiteDatabase db) {
        String query1 = "CREATE TABLE " + TABLE_NAME_HASH +
                " (" + COLUMN_ID + " INTEGER PRIMARY KEY AUTOINCREMENT, " +
                COLUMN_HASH + " TEXT);";
        String query2 = "CREATE TABLE " + TABLE_NAME_PERMITS +
                " (" + COLUMN_ID_PERMIT + " INTEGER PRIMARY KEY AUTOINCREMENT, "
                 + ID_PERMITS + " TEXT NOT NULL UNIQUE, " +
                COLUMN_DESCRIPTION_PERMITS + " TEXT);";

        db.execSQL(query1);
        db.execSQL(query2);
    }

    @Override
    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
        db.execSQL("DROP TABLE IF EXISTS " + TABLE_NAME_HASH);
        db.execSQL("DROP TABLE IF EXISTS " + TABLE_NAME_PERMITS);
        onCreate(db);
    }

    public void getHash(String hash) {
        SQLiteDatabase db = this.getReadableDatabase();
        String query = "SELECT " + COLUMN_HASH +
                " FROM " + TABLE_NAME_HASH + "WHERE " +
                COLUMN_HASH + " = " + hash;
        Cursor cursor = db.rawQuery(query, null);
        //something
        cursor.close();
        db.close();
    }

    public void getPermitDescription(String android_permission) {
        SQLiteDatabase db = this.getReadableDatabase();
        String query = "SELECT " + COLUMN_DESCRIPTION_PERMITS + " FROM " +
                TABLE_NAME_PERMITS + "WHERE " + ID_PERMITS +
                " = " + android_permission;
        Cursor cursor = db.rawQuery(query, null);
        //something
        cursor.close();
        db.close();
    }

    public void addNewHash(String hash){
        SQLiteDatabase db = this.getWritableDatabase();
        ContentValues cv = new ContentValues();

        cv.put(COLUMN_HASH, hash);
        long result = db.insert(TABLE_NAME_HASH,null, cv);
        if(result == -1)
            Toast.makeText(context, "Failed while adding a new hash!", Toast.LENGTH_SHORT).show();
        else
            Toast.makeText(context, "Added Successfully!", Toast.LENGTH_SHORT).show();
    }
}
